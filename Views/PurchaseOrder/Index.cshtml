
@{ ViewData["Title"] = "Purchase Order"; }


<section>
    <div class="col-md">
        <div class="x_panel">
            <div class="x_title">
                <h2 class="fa fa-building-o">  @ViewData["Title"] </h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
               
            </div>
            <div class="x_content">
                <div id="Grid"></div>
            </div>
        </div>
    </div>
</section>



@section Styles{

}

@section Scripts{

    <script type="text/javascript">
        $(function () {

            var dataManager = ej.DataManager({
                url: "/api/PurchaseOrder",
                adaptor: new ej.WebApiAdaptor(),
                offline: true
            });

            var dataManagerBranch = ej.DataManager({
                url: "/api/Branch",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerVendor = ej.DataManager({
                url: "/api/Vendor",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerPurchaseType = ej.DataManager({
                url: "/api/PurchaseType",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerCurrency = ej.DataManager({
                url: "/api/Currency",
                adaptor: new ej.WebApiAdaptor()
            });

            dataManager.ready.done(function (e) {
                $("#Grid").ejGrid({
                    dataSource: ej.DataManager({
                        json: e.result,
                        adaptor: new ej.remoteSaveAdaptor(),
                        insertUrl: "/api/PurchaseOrder/Insert",
                        updateUrl: "/api/PurchaseOrder/Update",
                        removeUrl: "/api/PurchaseOrder/Remove",
                    }),
                    toolbarSettings: {
                        showToolbar: true,
                        toolbarItems: ["add", "edit", "delete", "update", "cancel", "search", "printGrid"]
                    },
                    editSettings: {
                        allowEditing: true,
                        allowAdding: true,
                        allowDeleting: true,
                        showDeleteConfirmDialog: true,
                        editMode: "dialog"
                    },
                    isResponsive: true,
                    enableResponsiveRow: true,
                    allowSorting: true,
                    allowSearching: true,
                    allowFiltering: true,
                    filterSettings: {
                        filterType: "excel",
                        maxFilterChoices: 100,
                        enableCaseSensitivity: false
                    },
                    allowPaging: true,
                    pageSettings: { pageSize: 10, printMode: ej.Grid.PrintMode.CurrentPage },
                    columns: [
                        { headerText: 'Detail', template: "<a href='/PurchaseOrder/Detail/{{:PurchaseOrderId}}'>Detail</a>" },
                        { field: "PurchaseOrderId", headerText: 'PO Id', isPrimaryKey: true, isIdentity: true, visible: false },
                        { field: "PurchaseOrderName", headerText: 'PO#', allowEditing: false },
                        { field: "BranchId", headerText: 'Branch', foreignKeyField: "BranchId", foreignKeyValue: "BranchName", dataSource: dataManagerBranch, validationRules: { required: true } },
                        { field: "VendorId", headerText: 'Vendor', foreignKeyField: "VendorId", foreignKeyValue: "VendorName", dataSource: dataManagerVendor, validationRules: { required: true } },
                        { field: "OrderDate", headerText: 'Order Date', editType: "datepicker", format: "{0:MM/dd/yyyy}", validationRules: { required: true } },
                        { field: "DeliveryDate", headerText: 'Delivery Date', editType: "datepicker", format: "{0:MM/dd/yyyy}", validationRules: { required: true } },
                        { field: "PurchaseTypeId", headerText: 'Purchase Type', foreignKeyField: "PurchaseTypeId", foreignKeyValue: "PurchaseTypeName", dataSource: dataManagerPurchaseType },
                        { field: "CurrencyId", headerText: 'Currency', allowEditing: true, foreignKeyField: "CurrencyId", foreignKeyValue: "CurrencyName", dataSource: dataManagerCurrency },
                        { field: "Freight", headerText: 'Freight', defaultValue: 0, editType: "numericedit", format: "{0:n2}" },
                    ],
                    actionComplete: "complete",
                });
            });


        });

        function complete(args) {
            if (args.requestType == 'beginedit') {
                $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Record" });
            }
            if (args.requestType == 'beginedit' || args.requestType == 'add') {
                $('#GridBranchId').ejDropDownList({ change: 'branchDdlChange' });
            }
        }

        function branchDdlChange(e) {
            $.ajax({
                url: '/api/Currency/GetByBranchId/' + e.selectedValue,
                type: 'GET',
                success: function (data) {
                    $("#GridCurrencyId").ejDropDownList({
                        dataSource: [data],
                        fields: { id: 'CurrencyId', text: 'CurrencyCode', value: 'CurrencyId' },
                        value: data.CurrencyId
                    });
                }
            })
        }


    </script>
}