@model Inventory_Order_Managemen.Models.ApplicationUser
@inject Inventory_Order_Managemen.Data.ApplicationDbContext Context
@{ ViewData["Title"] = "User Profile";
   UserProfile profile = Context.UserProfile.SingleOrDefault(x => x.ApplicationUserId.Equals(Model.Id)); }


<section>
    <div class="col-md">
        <div class="x_panel">
            <div class="x_title">
                <h2 class="fa fa-building-o">  @ViewData["Title"] </h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div class="row">
                    <div class="col-lg-4">
                        <div class="row">
                            <div class="col-12">
                                <img style="width:50px; height:50px;" id="profilePicture" class="profile-user-img img-responsive img-circle" src="@profile.ProfilePicture" alt="User profile picture">
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-12">
                                <div class="cols-sample-area">
                                    <div class="frame">
                                        <div class="control">
                                            <div id="UploadDefault"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-8">
                        <div class="form-group">
                            <div class="col-lg-3">Email</div>
                            <div class="col-lg-9"><input class="form-control" value="@profile.Email" disabled /></div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-3">First Name</div>
                            <div class="col-lg-9"><input class="form-control" value="@profile.FirstName" disabled /></div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-3">Last Name</div>
                            <div class="col-lg-9"><input class="form-control" value="@profile.LastName" disabled /></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section>
    <div class="col-md">
        <div class="x_panel">
            <div class="x_title">
                <h2 class="fa fa-building-o">  Edit Profile </h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div id="Grid"></div>
            </div>
        </div>
    </div>

    <!-- /.box -->
</section>


<section>
    <div class="col-md">
        <div class="x_panel">
            <div class="x_title">
                <h2 class="fa fa-building-o">  Edit Profile </h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div id="GridPassword"></div>
            </div>
        </div>
    </div>

    <!-- /.box -->
</section>
    

    <script id="templateForm" type="text/template">
        <input hidden id="UserProfileId" name="UserProfileId" value="{{:UserProfileId}}" />
        <input hidden id="ApplicationUserId" name="ApplicationUserId" value="{{:ApplicationUserId}}" />
        <table cellspacing="10">
            <tr>
                <td>
                    Email
                </td>
                <td colspan="3">
                    <input id="EmailPassword" name="EmailPassword" value="{{:Email}}" />
                </td>
            </tr>
            <tr>
                <td>
                    First Name
                </td>
                <td>
                    <input id="FirstNamePassword" name="FirstNamePassword" value="{{:FirstName}}" />
                </td>
                <td>
                    Last Name
                </td>
                <td>
                    <input id="LastNamePassword" name="LastNamePassword" value="{{:LastName}}" />
                </td>
            </tr>
            <tr>
                <td>
                    Old Password
                </td>
                <td>
                    <input id="OldPassword" name="OldPassword" value="" />
                </td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td>
                    New Password
                </td>
                <td>
                    <input id="Password" name="Password" value="" />
                </td>
                <td>
                    Re-type Password
                </td>
                <td>
                    <input id="ConfirmPassword" name="ConfirmPassword" value="" />
                </td>
            </tr>
        </table>
    </script>
    <script id="templateEditForm" type="text/template">
        <input hidden id="UserProfileId" name="UserProfileId" value="{{:UserProfileId}}" />
        <input hidden id="ApplicationUserId" name="ApplicationUserId" value="{{:ApplicationUserId}}" />
        <table cellspacing="10">
            <tr>
                <td>
                    Email
                </td>
                <td colspan="3">
                    <input id="Email" name="Email" value="{{:Email}}" />
                </td>
            </tr>
            <tr>
                <td>
                    First Name
                </td>
                <td>
                    <input id="FirstName" name="FirstName" value="{{:FirstName}}" />
                </td>
                <td>
                    Last Name
                </td>
                <td>
                    <input id="LastName" name="LastName" value="{{:LastName}}" />
                </td>
            </tr>
        </table>
    </script>

    @section Styles{

    }

    @section Scripts{

    <script type="text/javascript">
    $(function () {

        $("#UploadDefault").ejUploadbox({
            saveUrl: "/api/UploadProfilePicture",
            allowDragAndDrop: true,
            multipleFilesSelection: false,
            success: "uploadSuccess",
            autoUpload: true,
        });

        var dataManager = ej.DataManager({
            url: "/api/User/GetByApplicationUserId/@Model.Id",
            adaptor: new ej.WebApiAdaptor(),
            offline: true
        });

        dataManager.ready.done(function (e) {
            renderGridProfile(e);
            renderGridChangePassword(e);
        });



    });

    function renderGridProfile(e) {
        $("#Grid").ejGrid({
            dataSource: ej.DataManager({
                json: e.result,
                adaptor: new ej.remoteSaveAdaptor(),
                updateUrl: "/api/User/Update"
            }),
            toolbarSettings: {
                showToolbar: true,
                toolbarItems: ["edit", "update", "cancel"]
            },
            editSettings: {
                allowEditing: true,
                allowAdding: true,
                allowDeleting: true,
                showDeleteConfirmDialog: true,
                editMode: "dialogtemplate",
                dialogEditorTemplateID: "#templateEditForm",
            },
            isResponsive: true,
            enableResponsiveRow: true,
            allowSorting: false,
            allowSearching: false,
            allowFiltering: false,
            filterSettings: {
                filterType: "excel",
                maxFilterChoices: 100,
                enableCaseSensitivity: false
            },
            allowPaging: false,
            pageSettings: { pageSize: 10 },
            columns: [
                { field: "UserProfileId", headerText: 'Id', isPrimaryKey: true, isIdentity: true, visible: false },
                { field: "Email", headerText: 'Email', validationRules: { required: true } },
                { field: "FirstName", headerText: 'First Name', validationRules: { required: true } },
                { field: "LastName", headerText: 'Last Name', validationRules: { required: false } },
            ],
            actionComplete: "complete",
        });
    }

    function renderGridChangePassword(e) {
        $("#GridPassword").ejGrid({
            dataSource: ej.DataManager({
                json: e.result,
                adaptor: new ej.remoteSaveAdaptor(),
                updateUrl: "/api/User/ChangePassword"
            }),
            toolbarSettings: {
                showToolbar: true,
                toolbarItems: ["edit", "update", "cancel"]
            },
            editSettings: {
                allowEditing: true,
                allowAdding: true,
                allowDeleting: true,
                showDeleteConfirmDialog: true,
                editMode: "dialogtemplate",
                dialogEditorTemplateID: "#templateForm",
            },
            isResponsive: true,
            enableResponsiveRow: true,
            allowSorting: false,
            allowSearching: false,
            allowFiltering: false,
            filterSettings: {
                filterType: "excel",
                maxFilterChoices: 100,
                enableCaseSensitivity: false
            },
            allowPaging: false,
            pageSettings: { pageSize: 10 },
            columns: [
                { field: "UserProfileId", headerText: 'Id', isPrimaryKey: true, isIdentity: true, visible: false },
                { field: "Email", headerText: 'Email', validationRules: { required: true } },
                { field: "FirstName", headerText: 'First Name', validationRules: { required: true } },
                { field: "LastName", headerText: 'Last Name', validationRules: { required: false } },
            ],
            actionComplete: "completeGridPassword",
        });
    }


    function complete(args) {

        $("#Email").ejMaskEdit({
            inputMode: 'Text',
        });
        $("#FirstName").ejMaskEdit({
            inputMode: 'Text',
        });
        $("#LastName").ejMaskEdit({
            inputMode: 'Text',
        });

        if (args.requestType == 'beginedit') {
            $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Profile" });
            $("#Email").ejMaskEdit("disable");
        }

        if (args.requestType == "save") {
            this.refreshContent();
        }

    }

    function completeGridPassword(args) {

        $("#EmailPassword").ejMaskEdit({
            inputMode: 'Text',
        });
        $("#FirstNamePassword").ejMaskEdit({
            inputMode: 'Text',
        });
        $("#LastNamePassword").ejMaskEdit({
            inputMode: 'Text',
        });
        $("#OldPassword").ejMaskEdit({
            inputMode: 'Password',
            validationRules: { required: true },
        });
        $("#Password").ejMaskEdit({
            inputMode: 'Password',
            validationRules: { required: true },
        });
        $("#ConfirmPassword").ejMaskEdit({
            inputMode: 'Password',
            validationRules: { required: true },
        });

        if (args.requestType == 'beginedit') {
            $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Password" });
            $("#EmailPassword").ejMaskEdit("disable");
            $("#FirstNamePassword").ejMaskEdit("disable");
            $("#LastNamePassword").ejMaskEdit("disable");
        }

        if (args.requestType == "save") {
            this.refreshContent();
        }

    }

    function uploadSuccess(e) {
        var resText = JSON.parse(e.responseText);
        $('.profilePicture').attr('src', '../upload/' + resText);
        $('#profilePicture').attr('src', '../upload/' + resText);
        $('.img-circle').attr('src', '../upload/' + resText);
    }


    </script>
    }
